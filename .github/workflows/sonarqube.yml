name: Build

on:
  push:
    branches:
      - master
      - develop-extend-document
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarQubeScan1:
    name: sonarQubeScan1
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run:  |
            cd parent && mvn clean install -DskipTests
      - name: SonarQube Scan 1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # analysis token associated to your project
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
            cd parent
            mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=SONAR_PROJECT1_KEY -Dsonar.projectName='SONAR_PROJECT1_NAME' 
        # Replace variables with project path, key and name
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for accurate versioning
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .  # Use the current directory as the build context
          file: Dockerfile  # Specify the Dockerfile to use
          tags: localpytest:latest  # Tag for the built image
          load: true  # Load the image into the Docker daemon (for local use)
          cache-from: type=gha  # Use GitHub Actions cache as a cache source
          cache-to: type=gha,mode=max  # Store cache in GitHub Actions for future builds
          push: false  # Do not push to a remote registry (set to true if you want to push)
